"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const ReactDOM = require("react-dom");
const index_1 = require("../src/index");
const columns = 4;
const columnWidth = 200;
const gutterWidth = 10;
const gutterHeight = 20;
const COUNT = 10;
const str = 'this is  a test txt. ';
class TestBlock extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {
            count: 0,
            header: str.repeat(Math.floor(Math.random() * 5)),
            body: str.repeat(Math.floor(Math.random() * 20))
        };
        this.addRow = () => {
            const { count } = this.state;
            this.setState({ count: count + 1 });
        };
        this.deleteRow = () => {
            const { count } = this.state;
            if (count > 0) {
                this.setState({ count: count - 1 });
            }
        };
    }
    render() {
        const { count, header, body } = this.state;
        const rows = [];
        for (let i = 0; i < count; i++) {
            rows.push((React.createElement("div", { key: i },
                i,
                " row")));
        }
        return (React.createElement("div", Object.assign({}, this.props, { style: { border: 'solid 1px red' } }),
            React.createElement("div", { style: { fontSize: 20, color: 'blue' } }, this.props.index),
            React.createElement("div", null, header),
            React.createElement("img", { style: { width: '100%' }, src: "https://gw.alipayobjects.com/mdn/rms_ace14a/afts/img/A*EmcPSpdHbUwAAAAAAAAAAABkARQnAQ" }),
            React.createElement("div", null, body),
            React.createElement("div", null,
                React.createElement("button", { onClick: this.addRow }, "Add row"),
                React.createElement("button", { onClick: this.deleteRow }, "Delete row")),
            rows));
    }
}
TestBlock.defaultProps = {
    index: 0
};
function createRandomBlock(key, props) {
    return (React.createElement(TestBlock, Object.assign({ key: key, index: key }, props)));
}
let uid = 0;
function addRandomBlock(count) {
    const res = [];
    for (let i = 0; i < count; i++) {
        res.push(createRandomBlock(uid++, {}));
    }
    return res;
}
class Demo extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.state = {
            list: addRandomBlock(COUNT),
        };
        this.addMore = () => {
            const { list } = this.state;
            const more = addRandomBlock(COUNT);
            const next = [].concat(list, more);
            this.setState({
                list: next
            });
        };
        this.replace = () => {
            this.setState({
                list: addRandomBlock(COUNT),
            });
        };
    }
    render() {
        const { list } = this.state;
        return (React.createElement("div", null,
            React.createElement(index_1.default, { style: { margin: '0 auto' }, columns: columns, columnWidth: columnWidth, gutterWidth: gutterWidth, gutterHeight: gutterHeight, responsive: true }, list),
            React.createElement("button", { style: { position: 'fixed', top: 100, right: 200, fontSize: 30 }, onClick: this.addMore }, "\u8FFD\u52A0\u8BB0\u5F55"),
            React.createElement("button", { style: { position: 'fixed', top: 150, right: 200, fontSize: 30 }, onClick: this.replace }, "\u66FF\u6362\u8BB0\u5F55")));
    }
}
const root = document.createElement('div');
document.body.appendChild(root);
ReactDOM.render(React.createElement(Demo, null), root);
